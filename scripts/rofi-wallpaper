#!/usr/bin/env bash
# Rofi Wallpaper Selector
# Selects wallpapers from ~/Pictures/Wallpapers or downloads from nsyout/walls

set -euo pipefail

# Set PATH to include common directories
export PATH="/usr/local/bin:/usr/bin:/bin:$PATH"

WALLPAPER_DIR="$HOME/Pictures/Wallpapers"
WALLS_REPO="https://github.com/nsyout/walls.git"
WALLS_DIR="$HOME/Pictures/Wallpapers/nsyout-walls"
CURRENT_WALLPAPER="$HOME/.wallpapers/wall.jpg"
PREVIEW_SIZE="300x200"

# Ensure wallpaper directory exists
mkdir -p "$WALLPAPER_DIR" "$HOME/.wallpapers"

show_help() {
    echo "Rofi Wallpaper Selector"
    echo ""
    echo "Options:"
    echo "  üìÅ Browse Local Wallpapers"
    echo "  üì¶ Download nsyout/walls Collection"
    echo "  üé® Browse Categories"
    echo "  üîÑ Random Wallpaper"
    echo "  ‚ùì Help"
}

clone_walls_repo() {
    if [ ! -d "$WALLS_DIR" ]; then
        echo "Downloading nsyout/walls collection..."
        git clone "$WALLS_REPO" "$WALLS_DIR" || {
            notify-send "Wallpaper Selector" "Failed to download wallpaper collection"
            exit 1
        }
        notify-send "Wallpaper Selector" "Downloaded wallpaper collection to $WALLS_DIR"
    else
        echo "Updating nsyout/walls collection..."
        (cd "$WALLS_DIR" && git pull) || true
    fi
}

get_categories() {
    if [ -d "$WALLS_DIR" ]; then
        find "$WALLS_DIR" -maxdepth 1 -type d -not -name ".*" -not -name "walls" | \
            xargs -I {} basename {} | \
            sort
    fi
}

browse_category() {
    local category="$1"
    local category_dir="$WALLS_DIR/$category"
    
    if [ ! -d "$category_dir" ]; then
        notify-send "Wallpaper Selector" "Category not found: $category"
        exit 1
    fi
    
    browse_wallpapers_with_preview "$category_dir" "Select wallpaper from $category"
}

browse_wallpapers_with_preview() {
    local search_dir="$1"
    local prompt="$2"
    
    # Create temporary file for wallpaper list with filenames
    local temp_list
    temp_list=$(mktemp)
    
    # Find wallpapers and create display list
    find "$search_dir" -type f \( -iname "*.jpg" -o -iname "*.jpeg" -o -iname "*.png" -o -iname "*.webp" \) | \
        sort | while read -r wallpaper; do
            local filename
            filename=$(basename "$wallpaper")
            local dirname
            dirname=$(basename "$(dirname "$wallpaper")")
            echo "[$dirname] $filename" >> "$temp_list"
            echo "$wallpaper" >> "${temp_list}.paths"
        done
    
    if [ ! -s "$temp_list" ]; then
        notify-send "Wallpaper Selector" "No wallpapers found in $search_dir"
        rm -f "$temp_list" "${temp_list}.paths"
        return
    fi
    
    # Use rofi with custom preview script
    local selection
    selection=$(cat "$temp_list" | rofi -dmenu -i -p "$prompt:" \
        -theme-str 'listview { columns: 1; } window { width: 60%; height: 70%; }')
    
    if [ -n "$selection" ]; then
        # Get the corresponding wallpaper path
        local line_num
        line_num=$(grep -n "^$selection$" "$temp_list" | cut -d: -f1)
        if [ -n "$line_num" ]; then
            local wallpaper_path
            wallpaper_path=$(sed -n "${line_num}p" "${temp_list}.paths")
            if [ -f "$wallpaper_path" ]; then
                set_wallpaper "$wallpaper_path"
            fi
        fi
    fi
    
    rm -f "$temp_list" "${temp_list}.paths"
}

browse_local() {
    if [ ! -d "$WALLPAPER_DIR" ] || [ -z "$(ls -A "$WALLPAPER_DIR" 2>/dev/null)" ]; then
        notify-send "Wallpaper Selector" "No local wallpapers found in $WALLPAPER_DIR"
        exit 1
    fi
    
    browse_wallpapers_with_preview "$WALLPAPER_DIR" "Select local wallpaper"
}

set_random_wallpaper() {
    local source_dirs=("$WALLPAPER_DIR")
    
    if [ -d "$WALLS_DIR" ]; then
        source_dirs+=("$WALLS_DIR")
    fi
    
    local wallpaper
    wallpaper=$(find "${source_dirs[@]}" -type f \( -iname "*.jpg" -o -iname "*.jpeg" -o -iname "*.png" -o -iname "*.webp" \) 2>/dev/null | \
        shuf -n 1)
    
    if [ -n "$wallpaper" ]; then
        set_wallpaper "$wallpaper"
    else
        notify-send "Wallpaper Selector" "No wallpapers found"
    fi
}

set_wallpaper() {
    local wallpaper="$1"
    
    if [ ! -f "$wallpaper" ]; then
        notify-send "Wallpaper Selector" "Wallpaper not found: $wallpaper"
        exit 1
    fi
    
    # Copy to current wallpaper location
    cp "$wallpaper" "$CURRENT_WALLPAPER"
    
    # Set wallpaper with hyprpaper
    if command -v hyprctl >/dev/null 2>&1; then
        hyprctl hyprpaper wallpaper ",$CURRENT_WALLPAPER" || true
        hyprctl hyprpaper preload "$CURRENT_WALLPAPER" || true
    fi
    
    # Also try with other wallpaper setters as fallback
    command -v feh >/dev/null 2>&1 && feh --bg-fill "$CURRENT_WALLPAPER" || true
    command -v swaybg >/dev/null 2>&1 && pkill swaybg; swaybg -i "$CURRENT_WALLPAPER" & || true
    
    local filename
    filename=$(basename "$wallpaper")
    notify-send "Wallpaper Set" "$filename"
}

main() {
    case "${1:-}" in
        --local)
            browse_local
            ;;
        --download)
            clone_walls_repo
            ;;
        --category)
            if [ -z "${2:-}" ]; then
                echo "Usage: $0 --category <category_name>"
                exit 1
            fi
            clone_walls_repo
            browse_category "$2"
            ;;
        --random)
            set_random_wallpaper
            ;;
        --help)
            show_help
            ;;
        *)
            # Interactive mode
            local choice
            choice=$(echo -e "üìÅ Browse Local Wallpapers\nüì¶ Download nsyout/walls Collection\nüé® Browse Categories\nüîÑ Random Wallpaper\n‚ùì Help" | \
                rofi -dmenu -i -p "Wallpaper Selector:")
            
            case "$choice" in
                "üìÅ Browse Local Wallpapers")
                    browse_local
                    ;;
                "üì¶ Download nsyout/walls Collection")
                    clone_walls_repo
                    ;;
                "üé® Browse Categories")
                    clone_walls_repo
                    local category
                    category=$(get_categories | rofi -dmenu -i -p "Select category:")
                    if [ -n "$category" ]; then
                        browse_category "$category"
                    fi
                    ;;
                "üîÑ Random Wallpaper")
                    set_random_wallpaper
                    ;;
                "‚ùì Help")
                    show_help | rofi -dmenu -p "Help:"
                    ;;
            esac
            ;;
    esac
}

main "$@"